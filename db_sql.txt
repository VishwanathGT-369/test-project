create database smartlibrary;

use smartlibrary;

create table category ( category_name varchar(30) primary key);
insert into category (category_name) values ("Programming Books");

create table department ( dept_name varchar(30) primary key);
insert into category (dept_name) values ("CS & Engg");

create table language ( lang_name varchar(30) primary key);
insert into category (lang_name) values ("English");

create table book(id int auto_increment,
title varchar(30),
category_name varchar(30),
dept_name varchar(30),
author varchar(30),
lang_name varchar(30),
description varchar(100),
version varchar(4),
price double,
entry_date long,
status varchar(10),
primary key(id));

ALTER TABLE book AUTO_INCREMENT=1000;


insert into book(title, category_name, dept_name, author,lang_name, description, version, price, status, entry_date) values
	('test book', 'Programming Books', 'CS & Engg', 'SL Bairappa', 'English', 'test book descr', '1.0', '100.00', 'INLIB', 1588439271343);
	
	
create table student (
	stud_id int auto_increment,
	name varchar(30),
	uname varchar(30),
	password varchar(30),
	phno varchar(13),
	dob long,
	address varchar(200),
	dept_name varchar(30),
	division varchar(10),
	profile_path varchar(25),
	primary key(stud_id)
);

ALTER TABLE student AUTO_INCREMENT=1000;

insert into student (name, uname, password, phno, dob, address, dept_name, division) values
	('Ravi', 'ravi@gmail.com', 'test', '9876543210', 1588439271343, 'Address1, Address2, Address3', 'CS & Engg', 'Div A');
	
	
create table transaction (
	trans_id int auto_increment,
	stud_id int not null,
	book_id int not null,
	issued_date long,
	foreign key (stud_id) references student(stud_id),
	foreign key (book_id) references book(id),
	primary key(trans_id)
);

insert into transaction (stud_id, book_id, issued_date) values (1000, 1000, 1588439271343);












